<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.induk.cinema.repository.ReservationRepository">

<resultMap id="eventCodeResult" type="eventCode">
    <id property="id" column="id" />
    <result property="eventId" column="event_id" />
    <result property="code" column="code" />
    <result property="issueDate" column="issue_date" />
    <result property="codeLimit" column="code_limit" />
    <result property="discountRate" column="discount_rate" />
    <result property="status" column="status" />
    <result property="memberId" column="member_id" />
    <association property="event" column="event_id" javaType="com.induk.cinema.domain.Event">
        <id property="id" column="event_id" />
        <result property="title" column="event_title" />
    </association>
</resultMap>

    <resultMap id="resultReservationDetail" type="java.util.HashMap">
        <id property="id" column="id" />
        <result property="memberId" column="member_id" />
        <result property="scheduleId" column="schedule_id" />
        <result property="paymentId" column="payment_id" />
        <result property="adult" column="adult" />
        <result property="youth" column="youth" />
        <result property="date" column="date" javaType="java.time.LocalDate"/>
        <result property="status" column="status" />
        <result property="method" column="method" />
        <result property="price" column="price" />
        <result property="cinemaName" column="cinema_name" />
        <result property="theaterName" column="theater_name" />
        <result property="startTime" column="start_time" />
        <result property="endTime" column="end_time" />
        <result property="screeningDate" column="screening_date" />
        <result property="screeningFormat" column="screening_format" />
        <result property="movieTitle" column="movie_title" />
        <result property="memberName" column="member_name" />
        <collection property="seatList" javaType="java.util.ArrayList" resultMap="seatMap" />
    </resultMap>

    <resultMap id="seatMap" type="java.util.HashMap">
        <id property="id" column="seatId" />
        <result property="number" column="number" />
    </resultMap>

    <select id="findAll" resultType="com.induk.cinema.dto.ReservationForm">
        select r.*, c.name cinema_name, t.name theater_name, m.title movie_title, me.name member_name
        from reservation r
        inner join member me on r.member_id = me.id
        inner join schedule s on r.schedule_id = s.id
        inner join movie m on s.movie_id = m.id
        inner join theater t on s.theater_id = t.id
        inner join cinema c on t.cinema_id = c.id
    </select>

    <select id="findById" parameterType="Long" resultMap="resultReservationDetail">
        select r.*, p.method, p.price, c.name cinema_name, t.name theater_name,
                s.start_time, s.end_time, s.screening_date, s.screening_format,
                m.title movie_title, me.name member_name, seat.id seatId, seat.number
        from reservation r
        left join payment p on r.payment_id = p.id
        inner join member me on r.member_id = me.id
        inner join schedule s on r.schedule_id = s.id
        inner join movie m on s.movie_id = m.id
        inner join theater t on s.theater_id = t.id
        inner join cinema c on t.cinema_id = c.id
        left join seat on r.id = seat.reservation_id
        where r.id = #{id}
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="Reservation">
        insert into reservation(member_id, schedule_id, payment_id, adult, youth, date, status)
        values (#{member_id}, #{schedule_id}, #{payment_id}, #{adult}, #{youth}, #{date}, #{status})
    </insert>

    <insert id="savePayment" useGeneratedKeys="true" keyProperty="id" parameterType="com.induk.cinema.domain.Payment">
        insert into payment(method, price, date)
        values (#{method}, #{price}, #{date})
    </insert>

    <update id="update" parameterType="java.util.HashMap">
        update reservation
        set status=#{status}
        where id=#{id}
    </update>

    <delete id="delete" parameterType="Long">
        delete r, p, s from reservation r
        left join payment p on r.payment_id = p.id
        left join seat s on s.reservation_id = r.id
        where r.id = #{id}
    </delete>

    <select id="findByCodeForEventCode" resultMap="eventCodeResult">
        select eventCode.*, event.title as event_title
        from eventCode inner join event on eventCode.event_id=event.id
        where eventCode.code = #{code} and eventCode.member_id = #{member_id} and eventCode.status = 0
        and eventCode.code_limit <![CDATA[>]]> #{date} and eventCode.issue_date <![CDATA[<]]> #{date}
    </select>


    <resultMap id="reservationList" type="com.induk.cinema.dto.ReservationListForm">
        <id property="id" column="id" />
        <result property="memberId" column="member_id" />
        <result property="scheduleId" column="schedule_id" />
        <result property="paymentId" column="payment_id" />
        <result property="adult" column="adult" />
        <result property="youth" column="youth" />
        <result property="date" column="date" />
        <result property="status" column="status" />
        <result property="seatNumbers" column="seat_numbers" />
        <association property="schedule" column="schedule_id" javaType="com.induk.cinema.domain.Schedule">
            <id property="id" column="schedule_id" />
            <result property="movie_id" column="movie_id" />
            <result property="theater_id" column="theater_id" />
            <result property="start_time" column="schedule_start_time" />
            <result property="end_time" column="schedule_end_time" />
            <result property="screening_date" column="schedule_screening_date" />
            <result property="screening_format" column="schedule_screening_format" />
        </association>
        <association property="movie" column="movie_id" javaType="com.induk.cinema.domain.Movie">
            <id property="id" column="movie_id" />
            <result property="poster" column="movie_poster" />
            <result property="title" column="movie_title" />
            <result property="showTimes" column="movie_show_times" />
            <association property="genre" column="genre_id" javaType="com.induk.cinema.domain.Genre">
                <id property="id" column="genre_id" />
                <result property="name" column="genre_name" />
            </association>
        </association>
        <association property="theater" column="theater_id" javaType="com.induk.cinema.domain.Theater">
            <id property="id" column="theater_id" />
            <result property="name" column="theater_name" />
        </association>
        <association property="cinema" column="cinema_id" javaType="com.induk.cinema.domain.Cinema">
            <id property="id" column="cinema_id" />
            <result property="name" column="cinema_name" />
        </association>
        <association property="payment" column="payment_id" javaType="com.induk.cinema.domain.Payment">
            <id property="id" column="payment_id" />
            <result property="method" column="payment_method" />
            <result property="price" column="payment_price" />
        </association>
    </resultMap>



    <select id="findReservationByStatus" parameterType="java.util.HashMap" resultMap="reservationList">
        SELECT reservation.*, movie.id as movie_id, movie.title as movie_title, movie.poster as movie_poster,
               movie.title as movie_title, movie.show_times as movie_show_times, genre.name as genre_name,
               group_concat(seat.number, " " order by seat.number) as seat_numbers, genre.id as genre_id,
               theater.id as theater_id, theater.name as theater_name, cinema.id as cinema_id, cinema.name as cinema_name,
               schedule.start_time as schedule_start_time, schedule.end_time as schedule_end_time,
               schedule.screening_format as schedule_screening_format, schedule.screening_date as schedule_screening_date,
               payment.id as payment_id, payment.method as payment_method, payment.price as payment_price
            FROM reservation
            inner join schedule on reservation.schedule_id = schedule.id
            inner join movie on schedule.movie_id = movie.id
            inner join theater on schedule.theater_id = theater.id
            inner join cinema on theater.cinema_id = cinema.id
            left join seat on schedule.id = seat.schedule_id and reservation.id = seat.reservation_id
        inner join genre on movie.genre_id = genre.id
            inner join payment on reservation.payment_id = payment.id
        where reservation.member_id = #{memberId}
        <if test="sort == 1">
            and ((concat(schedule.screening_date, ' ',schedule.end_time) > #{basehDate} and reservation.status <![CDATA[<=]]> 1) or reservation.status = 0)
            group by reservation.id
            order by reservation.status desc, schedule.start_time asc
        </if>
        <if test="sort == 2">
            and concat(schedule.screening_date, ' ',schedule.end_time) <![CDATA[<=]]> #{basehDate} and reservation.status = 1
            group by reservation.id
            order by reservation.date desc
        </if>
        limit #{firstRecordIndex}, #{recordsPerPage}
    </select>

    <select id="findReservationByStatusCount" parameterType="java.util.HashMap" resultType="int" >
        SELECT count(*)
        FROM reservation
        inner join schedule on reservation.schedule_id = schedule.id
        inner join movie on schedule.movie_id = movie.id
        inner join theater on schedule.theater_id = theater.id
        inner join cinema on theater.cinema_id = cinema.id
        inner join genre on movie.genre_id = genre.id
        inner join payment on reservation.payment_id = payment.id
        where reservation.member_id = #{memberId}
        <if test="sort == 1">
            and ((concat(schedule.screening_date, ' ',schedule.end_time) > #{basehDate} and reservation.status <![CDATA[<=]]> 1) or reservation.status = 0)
        </if>
        <if test="sort == 2">
            and concat(schedule.screening_date, ' ',schedule.end_time) <![CDATA[<=]]> #{basehDate} and reservation.status = 1
        </if>
    </select>

    <update id="cancelReservation" parameterType="Long">
        update reservation
            set status= if(status = 0, 1, 0)
            where id=#{id}
    </update>

    <select id="countAll" resultType="int">
        select count(*) from reservation where status = 1
    </select>

    <select id="findBySales" resultType="com.induk.cinema.dto.Sales" parameterType="java.util.HashMap">
        SELECT SUM(p.price) price, DATE_FORMAT(r.date, '%Y-%m') date, sum(r.adult) adult, sum(r.youth) youth
        FROM reservation r
        INNER JOIN schedule s ON s.id = r.schedule_id
        INNER JOIN movie m ON m.id = s.movie_id
        INNER JOIN payment p ON p.id = r.payment_id
        where m.id = #{movieId} and DATE_FORMAT(r.date, '%Y') = #{year} and r.status = 1
        GROUP BY date
    </select>

    <select id="findByMoviesSale" resultType="com.induk.cinema.dto.MoviesSale" parameterType="java.util.HashMap">
        SELECT SUM(p.price) price, m.title
        FROM reservation r
        INNER JOIN schedule s ON s.id = r.schedule_id
        INNER JOIN movie m ON m.id = s.movie_id
        INNER JOIN payment p ON p.id = r.payment_id
        <![CDATA[
        where DATE_FORMAT(r.date, '%Y-%m') >= #{date1} and DATE_FORMAT(r.date, '%Y-%m') <= #{date2} and r.status = 1
        ]]>
        GROUP BY m.title
    </select>

    <select id="findByCSales" resultType="com.induk.cinema.dto.Sales" parameterType="java.util.HashMap">
        select sum(p.price) price, DATE_FORMAT(r.date, '%Y-%m') date
        from reservation r
        inner join payment p on r.payment_id = p.id
        inner join schedule s on r.schedule_id = s.id
        inner join theater t on s.theater_id = t.id
        inner join cinema c on t.cinema_id = c.id
        where c.id = #{cinemaId} and DATE_FORMAT(r.date, '%Y') = #{year} and r.status = 1
        group by date
    </select>

    <select id="findByCinemaSale" resultType="com.induk.cinema.dto.CinemasSale" parameterType="java.util.HashMap">
        select c.name, sum(p.price) price
        from reservation r
        inner join payment p on r.payment_id = p.id
        inner join schedule s on r.schedule_id = s.id
        inner join theater t on s.theater_id = t.id
        inner join cinema c on t.cinema_id = c.id
        <![CDATA[
        where r.status = 1 and DATE_FORMAT(r.date, '%Y-%m') >= #{date1} and DATE_FORMAT(r.date, '%Y-%m') <= #{date2}
        ]]>
        group by c.name
    </select>

    <select id="findByAllSales" resultType="com.induk.cinema.dto.MainSales">
        select sum(p.price) price, count(*) reservation_count, sum(r.adult+r.youth) people_count, DATE_FORMAT(r.date, '%Y-%m') date
        from reservation r
        inner join payment p on r.payment_id = p.id
        inner join schedule s on r.schedule_id = s.id
        inner join theater t on s.theater_id = t.id
        inner join cinema c on t.cinema_id = c.id
        <![CDATA[
        where r.status = 1
        ]]>
        group by date
    </select>

    <select id="findByYearSales" resultType="com.induk.cinema.dto.MainSales" parameterType="String">
        select sum(p.price) price, DATE_FORMAT(r.date, '%Y-%m') date
        from reservation r
        inner join payment p on r.payment_id = p.id
        inner join schedule s on r.schedule_id = s.id
        inner join theater t on s.theater_id = t.id
        inner join cinema c on t.cinema_id = c.id
        <![CDATA[
        where r.status = 1 and DATE_FORMAT(r.date, '%Y') = #{year}
        ]]>
        group by date
    </select>
</mapper>
