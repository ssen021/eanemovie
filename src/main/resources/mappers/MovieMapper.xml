<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.induk.cinema.repository.MovieRepository">
    <resultMap id="resultMovie" type="Movie">
        <id property="id" column="id" />
        <result property="poster" column="poster" />
        <result property="title" column="title" />
        <result property="summary" column="summary" />
        <result property="language" column="language" />
        <result property="showTimes" column="show_times" />
        <result property="releaseDate" column="release_date" />
        <result property="rating" column="rating" />
        <result property="screeningFormat" column="screening_format" />
        <result property="trailer" column="trailer" />
        <result property="count" column="count" />
        <association property="director" column="director_id" resultMap="directorMap" />
        <association property="genre" column="genre_id" resultMap="genreMap" />
    </resultMap>

    <resultMap id="directorMap" type="Director">
        <id property="id" column="directorId" />
        <result property="name" column="directorName" />
        <result property="storeFilename" column="store_filename" />
    </resultMap>

    <resultMap id="genreMap" type="Genre">
        <id property="id" column="genreId" />
        <result property="name" column="genreName" />
    </resultMap>

    <resultMap id="resultMovieDetail" type="java.util.HashMap">
        <id property="id" column="id" />
        <result property="poster" column="poster" />
        <result property="title" column="title" />
        <result property="summary" column="summary" />
        <result property="language" column="language" />
        <result property="showTimes" column="show_times" />
        <result property="releaseDate" column="release_date" />
        <result property="rating" column="rating" />
        <result property="screeningFormat" column="screening_format" />
        <result property="directorName" column="directorName" />
        <result property="directorImage" column="directorImage" />
        <result property="genreName" column="genreName" />
        <collection property="actorList" javaType="java.util.ArrayList" resultMap="movieActorMap" />
        <collection property="movieAdList" javaType="java.util.ArrayList" resultMap="movieAdMap" />
    </resultMap>

    <resultMap id="movieActorMap" type="java.util.HashMap">
        <id property="id" column="movieActorId"/>
        <result property="role" column="role"/>
        <result property="name" column="actorName" />
        <result property="image" column="actorImage"/>
    </resultMap>

    <resultMap id="movieAdMap" type="java.util.HashMap">
        <id property="id" column="movieAdId" />
        <result property="file" column="movieAdStoreFilename" />
        <result property="kind" column="kind" />
    </resultMap>

    <select id="findAll" resultMap="resultMovie">
        select m.*, d.name as directorName, g.name as genreName, d.id as directorId, g.id as genreId
        from movie m
        left join director d on m.director_id = d.id
        left join genre g on m.genre_id = g.id
        order by m.release_date
    </select>

    <select id="findHighRank" resultMap="resultMovie">
        select m.*, d.name as directorName, g.name as genreName, d.id as directorId, g.id as genreId, count(*) as count
        from reservation r
        inner join payment p on r.payment_id = p.id
        inner join schedule s on r.schedule_id = s.id
        inner join movie m on s.movie_id = m.id
        inner join director d on m.director_id = d.id
        inner join genre g on m.genre_id = g.id
        where r.status = 1
        group by m.title
        order by count desc
        limit 0, 4
    </select>

    <select id="findByOption" resultMap="resultMovie" parameterType="java.util.HashMap">
        select m.*, d.name as directorName, g.name as genreName, d.id as directorId, g.id as genreId, ma.store_filename as trailer
        from movie m
        left join director d on m.director_id = d.id
        left join genre g on m.genre_id = g.id
        left join movie_ad ma on ma.movie_id = m.id
        where ma.kind = 'video'
        and m.screening_format like concat('%',#{format},'%')
        <if test="genres != null">
            and m.genre_id in
            <foreach collection="genres" item="opt" open="(" close=")" separator=", ">
                #{opt}
            </foreach>
        </if>
        <choose>
            <when test="sort == 1">
                <![CDATA[
                    and m.release_date <= '2021-07-13'
                ]]>
                order by m.release_date desc
            </when>
            <otherwise>
                <![CDATA[
                    and m.release_date > '2021-07-13'
                ]]>
                order by m.release_date
            </otherwise>
        </choose>
        limit #{startPage}, #{perPageNum}
    </select>

    <select id="countAll" resultType="int" parameterType="java.util.HashMap">
        select count(*)
        from movie m
        where m.screening_format like concat('%',#{format},'%')
        <if test="genres != null">
            and m.genre_id in
            <foreach collection="genres" item="opt" open="(" close=")" separator=", ">
                #{opt}
            </foreach>
        </if>
        <choose>
            <when test="sort == 1">
                <![CDATA[
                    and m.release_date <= '2021-07-13'
                ]]>
            </when>
            <otherwise>
                <![CDATA[
                    and m.release_date > '2021-07-13'
                ]]>
            </otherwise>
        </choose>
    </select>

    <select id="findById" resultMap="resultMovie" parameterType="Long">
        select m.*, d.name as directorName, d.store_filename, g.name as genreName, d.id as directorId, g.id as genreId
        from movie m
        inner join director d on m.director_id = d.id
        inner join genre g on m.genre_id = g.id
        where m.id = #{id}
    </select>

    <select id="findByIdMovieDetail" resultMap="resultMovieDetail" parameterType="Long">
        SELECT m.*,
        d.name directorName, d.store_filename directorImage,
        g.name genreName,
        mat.role, mat.id movieActorId, a.name actorName, a.store_filename actorImage,
        ma.store_filename movieAdStoreFilename, ma.kind, ma.id movieAdId
        FROM movie m
        INNER JOIN director d ON m.director_id = d.id
        INNER JOIN genre g ON m.genre_id = g.id
        INNER JOIN movie_ad ma ON ma.movie_id = m.id
        INNER JOIN movie_actor mat ON mat.movie_id = m.id
        INNER JOIN actor a ON mat.actor_id = a.id
        WHERE m.id = #{id}
    </select>

    <select id="findByIdMovieDetailRank" resultType="com.induk.cinema.dto.MovieDetailRank" parameterType="Long">
        SELECT SUM(r.adult+r.youth) audience, COUNT(*) count
        FROM movie m
        INNER JOIN schedule s ON m.id = s.movie_id
        INNER JOIN reservation r on s.id = r.schedule_id
        WHERE m.id = #{id} and r.status = 1
    </select>

    <update id="update" parameterType="com.induk.cinema.dto.MovieForm">
        update movie
        set poster=#{poster}, title=#{title}, summary=#{summary}, language=#{language}, show_times=#{showTimes},
            release_date=#{releaseDate}, rating=#{rating}, screening_format=#{joinFormat},
            director_id=#{directorId}, genre_id=#{genreId}
        where id=#{id}
    </update>

    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="com.induk.cinema.dto.MovieForm">
        insert into movie(poster, title, summary, language, show_times, release_date, rating, screening_format, director_id, genre_id)
        values (#{poster}, #{title}, #{summary}, #{language}, #{showTimes}, #{releaseDate}, #{rating}, #{joinFormat}, #{directorId}, #{genreId})
    </insert>

    <delete id="delete" parameterType="Long">
        delete from movie where id = #{id};
    </delete>
</mapper>
