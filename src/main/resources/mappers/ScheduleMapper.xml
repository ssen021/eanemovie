<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.induk.cinema.repository.ScheduleRepository">

    <resultMap id="resultScedule" type="com.induk.cinema.domain.Schedule">
        <id property="id" column="id"/>
        <result property="movie_id" column="movie_id"/>
        <result property="theater_id" column="theater_id"/>
        <result property="start_time" column="start_time"/>
        <result property="end_time" column="end_time"/>
        <result property="screening_date" column="screening_date"/>
        <result property="screening_format" column="screening_format"/>
        <result property="price" column="price"/>
        <association property="scheduleForm" javaType="com.induk.cinema.dto.ScheduleForm">
            <result property="movie_title" column="movie_title"/>
            <result property="movie_rating" column="movie_rating"/>
            <result property="movie_showtimes" column="movie_showtimes"/>
            <result property="theater_name" column="theater_name"/>
            <result property="theater_seat" column="theater_seat"/>
            <result property="cinema_id" column="cinema_id"/>
            <result property="cinema_name" column="cinema_name"/>
        </association>
    </resultMap>

    <select id="findAll" resultMap="resultScedule">
         select schedule.*, movie.title as movie_title, movie.rating as movie_rating, movie.show_times as movie_showtimes, theater.name as theater_name,
         theater.seat_count as theater_seat, theater.cinema_id as cinema_id, cinema.name as cinema_name from schedule left join movie on schedule.movie_id = movie.id
        left join theater on schedule.theater_id = theater.id left join cinema on theater.cinema_id = cinema.id
    </select>

    <select id="findById" parameterType="Long" resultMap="resultScedule">
         select schedule.*, movie.title as movie_title, movie.rating as movie_rating, movie.show_times as movie_showtimes, theater.name as theater_name,
         theater.seat_count as theater_seat, theater.cinema_id as cinema_id, cinema.name as cinema_name from schedule left join movie on schedule.movie_id = movie.id
        left join theater on schedule.theater_id = theater.id left join cinema on theater.cinema_id = cinema.id where schedule.id = #{id}
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="Schedule">
        insert into schedule(movie_id, theater_id, start_time, end_time, screening_date, screening_format, price)
        values (#{movie_id}, #{theater_id}, #{start_time}, #{end_time}, #{screening_date}, #{screening_format}, #{price})
    </insert>

    <update id="update" parameterType="Schedule">
        update schedule
        set movie_id=#{movie_id}, theater_id=#{theater_id}, start_time=#{start_time}, end_time=#{end_time},
         screening_date=#{screening_date}, screening_format=#{screening_format}, price=#{price}
        where id=#{id}
    </update>

    <delete id="delete" parameterType="Long">
        delete from schedule where id = #{id}
    </delete>

    <select id="findScheduleForAjax" parameterType="String" resultMap="resultScedule">
        select schedule.*, movie.title as movie_title, movie.rating as movie_rating, movie.show_times as movie_showtimes, theater.name as theater_name,
         theater.seat_count as theater_seat, theater.cinema_id as cinema_id from schedule left join movie on schedule.movie_id = movie.id
        left join theater on schedule.theater_id = theater.id where theater.cinema_id = #{cinemaId} and  schedule.screening_date = #{date}
        <if test="movieTitle != ''">
        and movie.title like concat('%', #{movieTitle}, '%')
        </if>
        order by theater_name asc, movie_title asc, start_time asc
    </select>

</mapper>
